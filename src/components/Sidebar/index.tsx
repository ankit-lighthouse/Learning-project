import React, { useState } from "react";
import MenuItem, {
  MenuItemPropsInterface,
} from "../../common-components/MenuItem";
import styles from "./styles.module.scss";
import Avatar from "../../common-components/avtar";
import Designation from "../Designation";

function Sidebar() {
  const [activeId, setActiveId] = useState(1);
  const sidebarMiddle = [
    {
      id: 1,
      name: "Dashboard",
      svg: (
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="24"
          height="24"
          viewBox="0 0 24 24"
          fill={activeId === 1 ? "#FFF" : "#7F7F7F"}
        >
          <path
            d="M3.59998 4.80001C3.59998 4.48175 3.7264 4.17652 3.95145 3.95148C4.17649 3.72643 4.48172 3.60001 4.79998 3.60001H19.2C19.5182 3.60001 19.8235 3.72643 20.0485 3.95148C20.2735 4.17652 20.4 4.48175 20.4 4.80001V7.20001C20.4 7.51827 20.2735 7.82349 20.0485 8.04853C19.8235 8.27358 19.5182 8.40001 19.2 8.40001H4.79998C4.48172 8.40001 4.17649 8.27358 3.95145 8.04853C3.7264 7.82349 3.59998 7.51827 3.59998 7.20001V4.80001ZM3.59998 12C3.59998 11.6817 3.7264 11.3765 3.95145 11.1515C4.17649 10.9264 4.48172 10.8 4.79998 10.8H12C12.3182 10.8 12.6235 10.9264 12.8485 11.1515C13.0735 11.3765 13.2 11.6817 13.2 12V19.2C13.2 19.5183 13.0735 19.8235 12.8485 20.0485C12.6235 20.2736 12.3182 20.4 12 20.4H4.79998C4.48172 20.4 4.17649 20.2736 3.95145 20.0485C3.7264 19.8235 3.59998 19.5183 3.59998 19.2V12ZM16.8 10.8C16.4817 10.8 16.1765 10.9264 15.9514 11.1515C15.7264 11.3765 15.6 11.6817 15.6 12V19.2C15.6 19.5183 15.7264 19.8235 15.9514 20.0485C16.1765 20.2736 16.4817 20.4 16.8 20.4H19.2C19.5182 20.4 19.8235 20.2736 20.0485 20.0485C20.2735 19.8235 20.4 19.5183 20.4 19.2V12C20.4 11.6817 20.2735 11.3765 20.0485 11.1515C19.8235 10.9264 19.5182 10.8 19.2 10.8H16.8Z"
            fill={activeId === 1 ? "white" : "#7F7F7F"}
          />
        </svg>
      ),
      //isActive: true
    },
    {
      id: 2,
      name: "Discover",
      svg: (
        <svg
          width="24"
          height="24"
          viewBox="0 0 24 24"
          fill={activeId===2?"#FFF":"#7F7F7F"}
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M3 12L5 10M5 10L12 3L19 10M5 10V20C5 20.2652 5.10536 20.5196 5.29289 20.7071C5.48043 20.8946 5.73478 21 6 21H9M19 10L21 12M19 10V20C19 20.2652 18.8946 20.5196 18.7071 20.7071C18.5196 20.8946 18.2652 21 18 21H15M9 21C9.26522 21 9.51957 20.8946 9.70711 20.7071C9.89464 20.5196 10 20.2652 10 20V16C10 15.7348 10.1054 15.4804 10.2929 15.2929C10.4804 15.1054 10.7348 15 11 15H13C13.2652 15 13.5196 15.1054 13.7071 15.2929C13.8946 15.4804 14 15.7348 14 16V20C14 20.2652 14.1054 20.5196 14.2929 20.7071C14.4804 20.8946 14.7348 21 15 21M9 21H15"
            stroke={activeId===2?"#FFF":"#7F7F7F"}
            strokeWidth="2"
            strokeLinecap="round"
            strokeLinejoin="round"
          />
        </svg>
      ),
      //isActive:false
    },
    {
      id: 3,
      name: "Inbox",
      svg: (
        <svg
          width="24"
          height="24"
          viewBox="0 0 24 24"
          fill={activeId === 3 ? "#FFF" : "#7F7F7F"}
          xmlns="http://www.w3.org/2000/svg"
        >
          <g clipPath="url(#clip0_701_569)">
            <path
              d="M2 8.994C1.99947 8.2062 2.15435 7.42604 2.45577 6.69819C2.75718 5.97033 3.19921 5.30908 3.75655 4.7523C4.31388 4.19553 4.97558 3.75416 5.70373 3.45347C6.43189 3.15278 7.21221 2.99869 8 3H16C19.313 3 22 5.695 22 8.994V21H8C4.687 21 2 18.305 2 15.006V8.994ZM20 19V8.994C19.9974 7.9345 19.5749 6.91924 18.8251 6.17062C18.0754 5.422 17.0595 5.00106 16 5H8C7.47485 4.99868 6.9546 5.10105 6.4691 5.30123C5.98359 5.5014 5.54238 5.79545 5.17076 6.16652C4.79914 6.53758 4.50443 6.97835 4.30353 7.46355C4.10262 7.94876 3.99947 8.46885 4 8.994V15.006C4.00265 16.0655 4.42511 17.0808 5.17486 17.8294C5.9246 18.578 6.9405 18.9989 8 19H20ZM14 11H16V13H14V11ZM8 11H10V13H8V11Z"
              fill={activeId === 3 ? "#FFF" : "#7F7F7F"}
            />
          </g>
          <defs>
            <clipPath id="clip0_701_569">
              <rect width="24" height="24" fill="white" />
            </clipPath>
          </defs>
        </svg>
      ),
      //isActive:false
    },
    {
      id: 4,
      name: "My Wallet",
      svg: (
        <svg
          width="20"
          height="16"
          viewBox="0 0 20 16"
          fill={activeId === 4 ? "#FFF" : "none"}
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M1 6H19M5 11H6M10 11H11M4 15H16C16.7956 15 17.5587 14.6839 18.1213 14.1213C18.6839 13.5587 19 12.7956 19 12V4C19 3.20435 18.6839 2.44129 18.1213 1.87868C17.5587 1.31607 16.7956 1 16 1H4C3.20435 1 2.44129 1.31607 1.87868 1.87868C1.31607 2.44129 1 3.20435 1 4V12C1 12.7956 1.31607 13.5587 1.87868 14.1213C2.44129 14.6839 3.20435 15 4 15Z"
            stroke="#7F7F7F"
            strokeWidth="2"
            strokeLinecap="round"
            strokeLinejoin="round"
          />
        </svg>
      ),
      //isActive:true
    },
    {
      id: 5,
      name: "Analytics",
      svg: (
        <svg
          width="20"
          height="20"
          viewBox="0 0 20 20"
          fill={activeId===5?"#FFF":"none"}
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M1 2C1 1.73478 1.10536 1.48043 1.29289 1.29289C1.48043 1.10536 1.73478 1 2 1H18C18.2652 1 18.5196 1.10536 18.7071 1.29289C18.8946 1.48043 19 1.73478 19 2V4.586C18.9999 4.85119 18.8946 5.10551 18.707 5.293L12.293 11.707C12.1055 11.8945 12.0001 12.1488 12 12.414V15L8 19V12.414C7.99994 12.1488 7.89455 11.8945 7.707 11.707L1.293 5.293C1.10545 5.10551 1.00006 4.85119 1 4.586V2Z"
            stroke="#7F7F7F"
            strokeWidth="2"
            strokeLinecap="round"
            strokeLinejoin="round"
          />
        </svg>
      ),
      //isActive:false
    },
    {
      id: 6,
      name: "Notifications",
      svg: (
        <svg
          width="24"
          height="24"
          viewBox="0 0 24 24"
          fill={activeId===6?"#FFF":"none"}
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M15 17H20L18.595 15.595C18.4063 15.4063 18.2567 15.1822 18.1546 14.9357C18.0525 14.6891 18 14.4249 18 14.158V11C18.0002 9.75894 17.6156 8.54834 16.8992 7.53489C16.1829 6.52144 15.17 5.75496 14 5.341V5C14 4.46957 13.7893 3.96086 13.4142 3.58579C13.0391 3.21071 12.5304 3 12 3C11.4696 3 10.9609 3.21071 10.5858 3.58579C10.2107 3.96086 10 4.46957 10 5V5.341C7.67 6.165 6 8.388 6 11V14.159C6 14.697 5.786 15.214 5.405 15.595L4 17H9M15 17V18C15 18.7956 14.6839 19.5587 14.1213 20.1213C13.5587 20.6839 12.7956 21 12 21C11.2044 21 10.4413 20.6839 9.87868 20.1213C9.31607 19.5587 9 18.7956 9 18V17M15 17H9"
            stroke="#7F7F7F"
            strokeWidth="2"
            strokeLinecap="round"
            strokeLinejoin="round"
          />
        </svg>
      ),
      // isActive:true
    },
    {
      id: 7,
      name: "Settings",
      svg: (
        <svg
          width="24"
          height="24"
          viewBox="0 0 24 24"
          fill={activeId===6?"#FFF":"none"}
          xmlns="http://www.w3.org/2000/svg"
        >
          <g clipPath="url(#clip0_701_574)">
            <path
              d="M3.34 17C2.91727 16.269 2.58866 15.4875 2.362 14.674C2.85531 14.4231 3.26959 14.0406 3.55903 13.5689C3.84846 13.0972 4.00176 12.5546 4.00197 12.0011C4.00218 11.4477 3.84928 10.905 3.5602 10.433C3.27112 9.96106 2.85712 9.57828 2.364 9.32701C2.81604 7.69249 3.67673 6.19996 4.865 4.99001C5.32909 5.29173 5.86762 5.45917 6.42098 5.47379C6.97434 5.48841 7.52095 5.34964 8.00033 5.07284C8.47971 4.79604 8.87315 4.392 9.13713 3.90545C9.4011 3.41889 9.52531 2.86878 9.496 2.31601C11.1381 1.89163 12.8612 1.89232 14.503 2.31801C14.474 2.87077 14.5984 3.4208 14.8626 3.90721C15.1268 4.39363 15.5204 4.79748 15.9998 5.07407C16.4793 5.35065 17.0259 5.48919 17.5793 5.47436C18.1326 5.45952 18.671 5.29189 19.135 4.99001C19.714 5.58001 20.228 6.25101 20.66 7.00001C21.093 7.74901 21.417 8.53001 21.638 9.32601C21.1447 9.57691 20.7304 9.95938 20.441 10.4311C20.1515 10.9028 19.9982 11.4454 19.998 11.9989C19.9978 12.5523 20.1507 13.0951 20.4398 13.567C20.7289 14.039 21.1429 14.4217 21.636 14.673C21.184 16.3075 20.3233 17.8001 19.135 19.01C18.6709 18.7083 18.1324 18.5408 17.579 18.5262C17.0257 18.5116 16.479 18.6504 15.9997 18.9272C15.5203 19.204 15.1268 19.608 14.8629 20.0946C14.5989 20.5811 14.4747 21.1312 14.504 21.684C12.8619 22.1084 11.1388 22.1077 9.497 21.682C9.52605 21.1292 9.4016 20.5792 9.13742 20.0928C8.87324 19.6064 8.47964 19.2025 8.00017 18.9259C7.5207 18.6494 6.97405 18.5108 6.42073 18.5257C5.8674 18.5405 5.32896 18.7081 4.865 19.01C4.27399 18.407 3.76159 17.7316 3.34 17ZM9 17.196C10.0656 17.8106 10.8668 18.797 11.25 19.966C11.749 20.013 12.25 20.014 12.749 19.967C13.1324 18.7979 13.934 17.8114 15 17.197C16.0652 16.5807 17.3205 16.3795 18.525 16.632C18.815 16.224 19.065 15.789 19.273 15.334C18.4524 14.4174 17.9991 13.2302 18 12C18 10.74 18.47 9.56301 19.273 8.66601C19.0635 8.21115 18.8125 7.77664 18.523 7.36801C17.3193 7.62032 16.0648 7.41948 15 6.80401C13.9344 6.18938 13.1332 5.20299 12.75 4.03401C12.251 3.98701 11.75 3.98601 11.251 4.03301C10.8676 5.20215 10.066 6.18857 9 6.80301C7.93478 7.41932 6.67948 7.62053 5.475 7.36801C5.18556 7.77629 4.93513 8.21087 4.727 8.66601C5.54757 9.58257 6.00088 10.7698 6 12C6 13.26 5.53 14.437 4.727 15.334C4.93647 15.7889 5.18754 16.2234 5.477 16.632C6.68072 16.3797 7.93521 16.5805 9 17.196ZM12 15C11.2044 15 10.4413 14.6839 9.87868 14.1213C9.31607 13.5587 9 12.7957 9 12C9 11.2044 9.31607 10.4413 9.87868 9.87869C10.4413 9.31608 11.2044 9.00001 12 9.00001C12.7956 9.00001 13.5587 9.31608 14.1213 9.87869C14.6839 10.4413 15 11.2044 15 12C15 12.7957 14.6839 13.5587 14.1213 14.1213C13.5587 14.6839 12.7956 15 12 15ZM12 13C12.2652 13 12.5196 12.8946 12.7071 12.7071C12.8946 12.5196 13 12.2652 13 12C13 11.7348 12.8946 11.4804 12.7071 11.2929C12.5196 11.1054 12.2652 11 12 11C11.7348 11 11.4804 11.1054 11.2929 11.2929C11.1054 11.4804 11 11.7348 11 12C11 12.2652 11.1054 12.5196 11.2929 12.7071C11.4804 12.8946 11.7348 13 12 13Z"
              fill={activeId===7?"#FFF":"#7F7F7F"}
            />
          </g>
          <defs>
            <clipPath id="clip0_701_574">
              <rect width="24" height="24" fill="white" />
            </clipPath>
          </defs>
        </svg>
      ),
      //isActive:false
    },
  ];
  const sidebarBottom = [
    {
      id: 8,
      name: "Help & Support",
      svg: (
        <svg
          width="20"
          height="21"
          viewBox="0 0 20 21"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M10 8V10M10 14H10.01M18.618 4.984C15.4561 5.15192 12.3567 4.05861 10 1.944C7.64327 4.05861 4.5439 5.15192 1.382 4.984C1.12754 5.96911 0.999177 6.98255 1 8C1 13.591 4.824 18.29 10 19.622C15.176 18.29 19 13.592 19 8C19 6.958 18.867 5.948 18.618 4.984Z"
            stroke="#7F7F7F"
            strokeWidth="2"
            strokeLinecap="round"
            strokeLinejoin="round"
          />
        </svg>
      ),
      // isActive:false
    },
    {
      id: 9,
      name: "Log Out",
      svg: (
        <svg
          width="24"
          height="24"
          viewBox="0 0 24 24"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <g id="UploadOutline">
            <path
              id="Vector"
              d="M16 20L17 20C17.7956 20 18.5587 19.6839 19.1213 19.1213C19.6839 18.5587 20 17.7956 20 17L20 7C20 6.20435 19.6839 5.44129 19.1213 4.87868C18.5587 4.31607 17.7956 4 17 4L16 4M8 8L4 12M4 12L8 16M4 12L16 12"
              stroke="#F10A0A"
              strokeWidth="2"
              strokeLinecap="round"
              strokeLinejoin="round"
            />
          </g>
        </svg>
      ),
      // isActive:false
    },
  ];

  return (
    <div className={styles.sidebar}>
      <div className={styles.profile}>
        <div className={styles.profileImg}>
          <Avatar />
        </div>

        <div className={styles.desination}>
          <Designation />
        </div>
      </div>
      <div className={styles.sidebarMiddle}>
        {sidebarMiddle.map((item) => {
          return (
            <div
              key={item.id}
              onClick={() => {
                setActiveId(item.id);
              }}
            >
              <MenuItem {...item} isActive={item.id === activeId}></MenuItem>
            </div>
          );
        })}
      </div>
      <div className={styles.sidebarBottom}>
        {sidebarBottom.map((item) => {
          return (
            <div key={item.id}>
              {" "}
              <MenuItem {...item} isActive={false}></MenuItem>
            </div>
          );
        })}
      </div>
    </div>
  );
}

export default Sidebar;
